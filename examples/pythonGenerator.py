# This file was generated by HDF Product Designer on 2017-11-29T13:34:15+0000.
#
# Design:  measurementNumber_sampleName
# Version: HEAD
#
# When executed it will create an HDF5 file that realistically reflects the
# design's specification. All datasets in the file will have no data.
# This file can be edited to add actual data to the datasets.


import h5py
import numpy as np

# creating file: measurementNumber_sampleName__HEAD__template.h5
f = h5py.File('measurementNumber_sampleName__HEAD__template.h5', 'w')

# Creating attributes for /
f.attrs['sample_name'] = "HV10"
f.attrs['sample_guid'] = "0xdeadbeef"
f.attrs['location'] = "UIO OCL"
f.attrs['experiment_description'] = "beam time at DTU"
f.attrs['operator_notes'] = "I was tired"
f.attrs.create('potentially_good', 0, (), dtype=np.dtype('<i1'))
f.attrs['operator_name'] = "grey"
f.attrs.create('measurement_number', 32432, (), dtype=np.dtype('<i8'))
f.attrs['subexperiment'] = "testing heating sample"
f.attrs.create('timestamp', 32131.213, (), dtype=np.dtype('<f8'))


# Group: /misc
grp_1 = f.create_group('misc')


# Group: /data
grp_1 = f.create_group('data')


# Group: /data/current
grp_2 = grp_1.create_group('current')


# Group: /data/current/0
grp_3 = grp_2.create_group('0')
# Creating attributes for /data/current/0
grp_3.attrs['instrument_name'] = "KEITHLEY INSTRUMENTS INC.,MODEL 6485,4038279,C01   Jun 23 2010 12:22:00/A02  /H\\r\\n"

# Dataset: /data/current/0/yValues
dt = np.dtype('<f4')
dset = grp_3.create_dataset('yValues', (300,), maxshape=(300,), chunks=(300,), compression='gzip', compression_opts=6, dtype=dt)
# initialize dataset values here

# Dataset: /data/current/0/xValues
dt = np.dtype('<f4')
dset = grp_3.create_dataset('xValues', (300,), maxshape=(300,), chunks=(300,), compression='gzip', compression_opts=6, dtype=dt)
# initialize dataset values here

# Dataset: /data/current/0/yScale
dt = np.dtype('<f4')
dset = grp_3.create_dataset('yScale', (300,), maxshape=(300,), chunks=(300,), compression='gzip', compression_opts=6, dtype=dt)
# initialize dataset values here


# Group: /data/spectra
grp_2 = grp_1.create_group('spectra')


# Group: /data/spectra/1
grp_3 = grp_2.create_group('1')
# Creating attributes for /data/spectra/1
grp_3.attrs['instrument_name'] = "Thorlabs Thing B"
grp_3.attrs.create('t_acqusition', 0.23, (), dtype=np.dtype('<f4'))

# Dataset: /data/spectra/1/yValues
dt = np.dtype('<f4')
dset = grp_3.create_dataset('yValues', (300,), maxshape=(300,), chunks=(300,), compression='gzip', compression_opts=6, dtype=dt)
# initialize dataset values here

# Dataset: /data/spectra/1/xValues
dt = np.dtype('<f4')
dset = grp_3.create_dataset('xValues', (300,), maxshape=(300,), chunks=(300,), compression='gzip', compression_opts=6, dtype=dt)
# initialize dataset values here


# Group: /data/spectra/0
grp_3 = grp_2.create_group('0')
# Creating attributes for /data/spectra/0
grp_3.attrs['instrument_name'] = "Thorlabs Thing A"
grp_3.attrs.create('t_acqusition', 0.23, (), dtype=np.dtype('<f4'))

# Dataset: /data/spectra/0/yValues
dt = np.dtype('<f4')
dset = grp_3.create_dataset('yValues', (300,), maxshape=(300,), chunks=(300,), compression='gzip', compression_opts=6, dtype=dt)
# initialize dataset values here

# Dataset: /data/spectra/0/xValues
dt = np.dtype('<f4')
dset = grp_3.create_dataset('xValues', (300,), maxshape=(300,), chunks=(300,), compression='gzip', compression_opts=6, dtype=dt)
# initialize dataset values here

# Dataset: /data/spectra/0/yScale
dt = np.dtype('<f4')
dset = grp_3.create_dataset('yScale', (300,), maxshape=(300,), chunks=(300,), compression='gzip', compression_opts=6, dtype=dt)
# initialize dataset values here


# Group: /data/image
grp_2 = grp_1.create_group('image')


# Group: /data/image/0
grp_3 = grp_2.create_group('0')
# Creating attributes for /data/image/0
grp_3.attrs.create('sizeX', 1296, (), dtype=np.dtype('<i2'))
grp_3.attrs.create('sizeY', 964, (), dtype=np.dtype('<i2'))
grp_3.attrs.create('t_acqusition', 0.34, (), dtype=np.dtype('<f8'))
grp_3.attrs.create('gain', 2.3, (), dtype=np.dtype('<f4'))
grp_3.attrs['camera'] = "Manta125G"

# Dataset: /data/image/0/data
dt = np.dtype('<i2')
dset = grp_3.create_dataset('data', (1292,964), maxshape=(1292,964), chunks=(1292,964), compression='gzip', compression_opts=6, dtype=dt)
# initialize dataset values here


# Group: /analysis
grp_1 = f.create_group('analysis')

# Close the file
f.close()
